# gem5 Traffic Generator Configuration File Example
#
# This file defines the behavior of a TrafficGen SimObject.
# It consists of STATE definitions, an INIT state, and TRANSITION definitions.
#
# Comments start with a '#'
# All time durations are in Ticks.
# All addresses and sizes are in Bytes (and typically specified in decimal).

#------------------------------------------------------------------------------
# STATE DEFINITIONS
#
# Format:
# STATE <id> <duration_ticks> <type> <type_specific_parameters...>
#
# Common Types:
#   IDLE:   No traffic generated.
#           Parameters: None
#   LINEAR: Generates requests by stepping through a memory range.
#           Parameters: <read_%> <start_addr> <end_addr> <block_size> \
#                       <min_period_ticks> <max_period_ticks> <data_limit_bytes>
#           - read_%: Percentage of requests that are reads (0-100).
#           - start_addr: Starting memory address.
#           - end_addr: Ending memory address (typically exclusive upper bound for the region, so accesses are [start_addr, end_addr-1]).
#           - block_size: Size of each memory request.
#           - min_period_ticks: Minimum time between requests.
#           - max_period_ticks: Maximum time between requests. If min=max, period is constant.
#           - data_limit_bytes: Total data to transfer in this state (0 for unlimited within duration).
#   RANDOM: Generates requests to random addresses within a range.
#           Parameters: <read_%> <start_addr> <end_addr> <block_size> \
#                       <min_period_ticks> <max_period_ticks> <data_limit_bytes>
#           (Parameters are the same as LINEAR)
#   TRACE:  Replays traffic from a trace file.
#           Parameters: <trace_file_path> <data_limit_bytes>
#
#------------------------------------------------------------------------------
# State 0: Initial Idle State
# Duration: 100,000 ticks
# Type: IDLE
STATE 0 100000 IDLE
# State 1: Linear Read-Heavy Traffic
# Duration: 5,000,000 ticks
# Type: LINEAR
# Parameters:
#   - 80% reads
#   - Address range: 3221225472 to 3231711231 (0xC0000000 to 0xC09FFFFF, 10MB)
#     (Config params: start_addr=3221225472, end_addr=3231711232)
#   - Block size: 64 bytes
#   - Period: Fixed at 2000 ticks between requests
#   - Data limit: Unlimited within the duration (0)
STATE 1 5000000 LINEAR 80 3221225472 3231711232 64 4000 4000 0
# State 2: Random Mixed Read/Write Traffic
# Duration: 10,000,000 ticks
# Type: RANDOM
# Parameters:
#   - 50% reads
#   - Address range: 3231711232 to 3242196991 (0xC0A00000 to 0xC13FFFFF, 10MB)
#     (Config params: start_addr=3231711232, end_addr=3242196992)
#   - Block size: 64 bytes
#   - Period: Varies between 1000 and 3000 ticks
#   - Data limit: Unlimited (0)
STATE 2 10000000 RANDOM 50 3231711232 3242196992 64 4000 7000 0
# State 3: Linear Write-Only Bursty Traffic
# Duration: 3,000,000 ticks
# Type: LINEAR
# Parameters:
#   - 0% reads (100% writes)
#   - Address range: 3242196992 to 3252682751 (0xC1400000 to 0xC1DFFFFF, 10MB)
#     (Config params: start_addr=3242196992, end_addr=3252682752)
#   - Block size: 64 bytes
#   - Period: Fixed at 500 ticks (more bursty)
#   - Data limit: Unlimited (0)
STATE 3 3000000 LINEAR 0 3242196992 3252682752 64 4000 6000 0
# State 4: Trace-based traffic (example, requires a trace file)
# Duration: 200,000,000 ticks
# Type: TRACE
# Parameters:
#   - Trace file: "my_memory_trace.trc" (this file needs to exist and be accessible by gem5)
#   - Data limit: Unlimited (0)
# Note: The format of the trace file is specific.
#       Typically, it's a text file with lines like: <addr> <R|W> <size>
#       Or it might be a binary format depending on the gem5 version/configuration.
#       This state is commented out by default as it requires an actual trace file.
# STATE 4 200000000 TRACE my_memory_trace.trc 0
#
#------------------------------------------------------------------------------
# INITIAL STATE DEFINITION
#
# Format:
# INIT <state_id>
#
# Specifies the state in which the traffic generator starts.
#------------------------------------------------------------------------------
INIT 0
#------------------------------------------------------------------------------
# TRANSITION DEFINITIONS
#
# Format:
# TRANSITION <from_state_id> <to_state_id> <probability>
#
# Defines the probability (0.0 to 1.0) of moving from one state to another
# when the duration of <from_state_id> expires or its data_limit is reached.
# The sum of probabilities for all transitions from a given state should ideally be 1.0.
# If no transition is defined for a state, or if probabilities don't sum to 1.0,
# the behavior might be to exit or loop on the current state (check gem5 docs).
#------------------------------------------------------------------------------
# From State 0 (Idle)
TRANSITION 0 1 1.0  # Always go to State 1 (Linear Read-Heavy) after initial idle
# From State 1 (Linear Read-Heavy)
TRANSITION 1 2 0.7   # 70% chance to go to State 2 (Random Mixed)
TRANSITION 1 3 0.3   # 30% chance to go to State 3 (Linear Write-Only)
# From State 2 (Random Mixed)
TRANSITION 2 1 0.5  # 50% chance to go back to State 1
TRANSITION 2 0 0.5   # 50% chance to go to Idle (State 0)
# If State 4 (Trace) was enabled:
# TRANSITION 2 4 0.2 # Example: 20% chance to go to Trace
# Then adjust other probabilities from State 2 accordingly, e.g.:
#TRANSITION 2 1 0.5
#TRANSITION 2 0 0.5
# From State 3 (Linear Write-Only)
TRANSITION 3 0 1.0   # Always go back to Idle (State 0)
# From State 4 (Trace - if enabled)
# TRANSITION 4 0 1.0   # Example: Always go to Idle after trace playback
